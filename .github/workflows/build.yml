name: build

on:
  workflow_dispatch:
    branches: [ master ]
  push:
    branches: [ master ]
    paths:
      - '**'
      - '!docs/**'
      - '!README.md'
  pull_request:
    branches: [ master ]

jobs:
  version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Calculate version
        id: version
        run: curl -Ls https://solugo.github.io/gitversion/run.sh | GITVERSION=v1.0.12 bash
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - version
    env:
      VERSION: ${{ needs.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build Frontend
        working-directory: ./frontend
        run: yarn install && yarn version --new-version "$VERSION" --no-git-tag-version && yarn run build
      - name: Build Backend
        working-directory: ./backend
        run: ./gradlew clean check bootJar --no-daemon
      - name: Build Docker Image
        run: DOCKER_BUILDKIT=1 docker build --tag ghcr.io/${{ github.repository }}:${{ env.VERSION }} --tag ghcr.io/${{ github.repository }}:latest . --no-cache
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Docker Image
        run: docker push ghcr.io/${{ github.repository }}:${{ env.VERSION }} && docker push ghcr.io/${{ github.repository }}:latest
  deploy:
    name: Deploy to Kubernetes
    needs:
      - version
      - build
    env:
      VERSION: ${{ needs.version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Kubernetes
        run: mkdir ~/.kube && echo '${{ secrets.KUBECONFIG }}' > ~/.kube/config && chmod go-rwx ~/.kube/config
      - name: Deploy to Kubernetes
        working-directory: ./chart
        run: |
          helm dependency update . && helm upgrade -i shopping . \
          --wait \
          --namespace shopping \
          --create-namespace \
          --set metrics.enabled=true \
          --set ingress.enabled=true \
          --set ingress.domain=shopping.solugo.de \
          --set ingress.annotations."kubernetes\.io/ingress\.class"=public \
          --set ingress.annotations."cert-manager\.io/cluster-issuer"=letsencrypt \
          --set image.pullPolicy="Always" \
          --set imagePull.credentials.registry="ghcr.io" \
          --set imagePull.credentials.username="${{ secrets.REGISTRY_PULL_USERNAME }}" \
          --set imagePull.credentials.password="${{ secrets.REGISTRY_PULL_PASSWORD }}" \
          --set mongodb.enabled=true \
          --set mongodb.auth.enabled=false \
          --set security.issuerUri=https://chronotrace.eu.auth0.com/ \
          --set security.publicClientId=XStfUfzVnMFOgq1vUfJFfFYKLxIqgPK0 \
          ;
